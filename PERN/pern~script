#!/bin/bash

# Define the descriptions for each technology
declare -A tech_descriptions
tech_descriptions=(
  ["express"]="# Express.js\n\n## Overview\nExpress.js, or simply Express, is a minimal and flexible Node.js web application framework that provides a robust set of features to develop web and mobile applications. It is known for its simplicity and flexibility.\n\n## Features\n- **Middleware**: Supports middleware to handle HTTP requests, responses, and the entire request-response cycle.\n- **Routing**: Provides robust routing for creating APIs.\n- **Template Engines**: Supports various template engines to generate HTML dynamically.\n\n## Use Cases\nExpress.js is used for building single-page, multi-page, and hybrid web applications. It is also a core component of the MEAN and MERN stacks."
  
  ["postgresql"]="# PostgreSQL\n\n## Overview\nPostgreSQL is a powerful, open-source object-relational database system known for its reliability, robustness, and feature completeness. It supports SQL and JSON querying.\n\n## Features\n- **ACID Compliance**: Ensures reliability and data integrity with Atomicity, Consistency, Isolation, and Durability (ACID) properties.\n- **Extensibility**: Allows adding custom functions, data types, and more.\n- **Scalability**: Supports horizontal scalability through built-in replication and partitioning features.\n\n## Use Cases\nPostgreSQL is used for enterprise applications, data warehousing, geographic information systems (GIS), and web applications requiring a robust database solution."
  
  ["nodejs"]="# Node.js\n\n## Overview\nNode.js is an open-source, cross-platform JavaScript runtime environment that executes JavaScript code outside of a browser. It is designed to build scalable network applications.\n\n## Features\n- **Event-Driven Architecture**: Handles multiple connections concurrently.\n- **Non-Blocking I/O**: Optimizes throughput and scalability.\n- **Single Programming Language**: Uses JavaScript for both server-side and client-side scripting.\n\n## Use Cases\nNode.js is used for developing server-side and networking applications. It's ideal for real-time applications such as chat applications, real-time collaboration tools, and streaming services."
  
  ["react"]="# React\n\n## Overview\nReact is a JavaScript library for building user interfaces. It is maintained by Facebook and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications.\n\n## Features\n- **Component-Based**: Build encapsulated components that manage their own state, then compose them to make complex UIs.\n- **Declarative**: React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes.\n- **Learn Once, Write Anywhere**: You can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using React Native.\n\n## Use Cases\nReact is used for developing dynamic and responsive web interfaces, single-page applications (SPAs), and mobile applications using React Native."
)

# Create README.md files in each existing directory
for tech in "${!tech_descriptions[@]}"; do
  if [ -d "$tech" ]; then
    echo -e "${tech_descriptions[$tech]}" > "$tech/README.md"
  else
    echo "Directory '$tech' not found"
  fi
done

echo "README.md files have been created in the specified directories."
