#!/bin/bash

# Define the descriptions for each technology
declare -A tech_descriptions
tech_descriptions=(
  ["expressjs"]="# Express.js\n\n## Overview\nExpress.js, or simply Express, is a minimal and flexible Node.js web application framework that provides a robust set of features to develop web and mobile applications. It is known for its simplicity and flexibility.\n\n## Features\n- **Middleware**: Supports middleware to handle HTTP requests, responses, and the entire request-response cycle.\n- **Routing**: Provides robust routing for creating APIs.\n- **Template Engines**: Supports various template engines to generate HTML dynamically.\n\n## Use Cases\nExpress.js is used for building single-page, multi-page, and hybrid web applications. It is also a core component of the MEAN and MERN stacks."
  
  ["mongodb"]="# MongoDB\n\n## Overview\nMongoDB is a source-available cross-platform document-oriented database program. Classified as a NoSQL database, MongoDB uses JSON-like documents with optional schemas.\n\n## Features\n- **Schema-less**: Supports dynamic schemas for unstructured data.\n- **Scalability**: Easily scales horizontally across many servers.\n- **Aggregation Framework**: Provides a powerful aggregation framework for data processing.\n\n## Use Cases\nMongoDB is used for large-scale data storage, real-time analytics, content management, and mobile and social infrastructure."
  
  ["nodejs"]="# Node.js\n\n## Overview\nNode.js is an open-source, cross-platform JavaScript runtime environment that executes JavaScript code outside of a browser. It is designed to build scalable network applications.\n\n## Features\n- **Event-Driven Architecture**: Handles multiple connections concurrently.\n- **Non-Blocking I/O**: Optimizes throughput and scalability.\n- **Single Programming Language**: Uses JavaScript for both server-side and client-side scripting.\n\n## Use Cases\nNode.js is used for developing server-side and networking applications. It's ideal for real-time applications such as chat applications, real-time collaboration tools, and streaming services."
  
  ["vuejs"]="# Vue.js\n\n## Overview\nVue.js is an open-source model-view-viewmodel (MVVM) front-end JavaScript framework for building user interfaces and single-page applications. Vue.js is designed to be incrementally adoptable and can also function as a web application framework capable of powering advanced single-page applications.\n\n## Features\n- **Component-Based**: Vue.js provides an approachable way to build complex UIs using components.\n- **Reactivity**: Vue.js uses a virtual DOM to efficiently update the DOM.\n- **Flexibility**: Vue.js can be used for building large-scale applications and small components alike.\n\n## Use Cases\nVue.js is used for creating dynamic user interfaces, single-page applications, and complex front-end applications. It is known for its simplicity and ease of integration."
)

# Create README.md files in each existing directory
for tech in "${!tech_descriptions[@]}"; do
  if [ -d "$tech" ]; then
    echo -e "${tech_descriptions[$tech]}" > "$tech/README.md"
  else
    echo "Directory '$tech' not found"
  fi
done

echo "README.md files have been created in the specified directories."
